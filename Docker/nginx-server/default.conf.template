server {
    listen 80;
    server_name ${DOMAIN};
    client_max_body_size 100M;
    return 301 https://${DOMAIN}$request_uri;
}

server {
    listen 443 ssl;
    server_name ${DOMAIN};
    client_max_body_size 100M;
    ssl_certificate /myssl/${NGINX_CERTIFICATE_FILE_NAME};
    ssl_certificate_key /myssl/${NGINX_CERTIFICATE_KEY_FILE_NAME};

    location / {
        proxy_pass http://frontend-node-server:${FRONTEND_NODE_SERVER_DOCKER_PORT};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
    }
}

server {
    listen 80;
    server_name ${API_DOMAIN};
    client_max_body_size 100M;
    return 301 https://${API_DOMAIN}$request_uri;
}

server {
    listen 443 ssl;
    server_name ${API_DOMAIN};
    client_max_body_size 100M;
    ssl_certificate /myssl/${NGINX_CERTIFICATE_FILE_NAME};
    ssl_certificate_key /myssl/${NGINX_CERTIFICATE_KEY_FILE_NAME};

    location / {
        proxy_pass http://backend-node-server:${BACKEND_NODE_SERVER_DOCKER_PORT};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

server {
    listen 80;
    server_name ${UPLOAD_DOMAIN};
    client_max_body_size 100M;
    return 301 https://${UPLOAD_DOMAIN}$request_uri;
}

server {
    listen 443 ssl;
    server_name ${UPLOAD_DOMAIN};
    client_max_body_size 100M;
    root /myapp/upload;
    ssl_certificate /myssl/${NGINX_CERTIFICATE_FILE_NAME};
    ssl_certificate_key /myssl/${NGINX_CERTIFICATE_KEY_FILE_NAME};
}